name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stage
          - prod
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
      AWS_REGION: ap-south-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}          


jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.9

    - name: Terraform Init
      run: terraform init
      working-directory : ./terraform
    
    - name: Terraform Format
      run: terraform fmt -check
      working-directory : ./terraform    

    - name: Terraform Validate
      run: terraform validate
      working-directory : ./terraform

    - name: Terraform Plan
      if: ${{ github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply' || github.event.inputs.action == 'destroy' }}
      working-directory : ./terraform
      run: terraform plan --var-file=${{ github.event.inputs.environment }}.tfvars

    - name: Terraform Apply
      if: ${{ github.event.inputs.action == 'apply' && success() }}
      working-directory : ./terraform
      run: terraform apply --auto-approve --var-file=${{ github.event.inputs.environment }}.tfvars

    - name: Terraform Destroy
      if: ${{ github.event.inputs.action == 'destroy' && success() }}
      working-directory : ./terraform
      run: terraform destroy --auto-approve --var-file=${{ github.event.inputs.environment }}.tfvars
      env:
        TF_VAR_environment: ${{ github.event.inputs.environment }}

  manual-approval:
    needs: terraform
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' && success() }}
    steps:
    - name: Manual Approval
      uses: hmarr/auto-approve-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        environment: ${{ github.event.inputs.environment }}
        action: destroy
